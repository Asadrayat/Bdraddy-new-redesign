<div class="main_pd__attribute {% if block.settings.enable_mb %}mb{% endif %}" data-main-pda>
  {% render 'all-icons', name: 'right_chevron' %}
  <p>{{ block.settings.title }}</p>
</div>
{%- assign metafield_title_list = product.metafields.custom.feature_performance_attribute.value -%}
<div class="product__attribute_drawer">
  <div class="product__attribute_drawer_wrap">
    <div class="pa_tab__title">
      {% if block.settings.tab1_title != blank %}
        <div class="pa__title active" data-order="1">
          <p>{{ block.settings.tab1_title }}</p>
        </div>
      {% endif %}
      {% if block.settings.tab2_title != blank %}
        <div class="pa__title" data-order="2">
          <p>{{ block.settings.tab2_title }}</p>
        </div>
      {% endif %}
    </div>
    <div class="pa__tab_content active" data-order="1">
      {% if block.settings.tab1_content1 != blank %}
        <div class="pa__content first">{{ block.settings.tab1_content1 }}</div>
      {% endif %}
      <div class="pa__child_content_wrap">
        {% if block.settings.tab1_content2 != blank %}
          <div class="pa__child_content">
            <div class="pa__title">
              <p>{{ 'Details' }}</p>
            </div>
            <div class="pa__content">{{ block.settings.tab1_content2 }}</div>
          </div>
        {% endif %}
         {% for option in product.options_with_values %}
          {% if option.name == 'Size' or option.name == 'size' %}
             <div class="pa__child_content">
                <div class="pa__title">
                  <p>{{ 'SIZE & FIT' }}</p>
                </div>
                {% if product.selected_or_first_available_variant.metafields.custom.model_info != blank %}
                  <div class="pa__content">
                    {% assign size_value = '' %}
                    {% for option in product.options_with_values %}
                      {% if option.name == 'Size' or option.name == 'size' %}
                        {% assign size_value = product.selected_or_first_available_variant.options[forloop.index0] %}
                      {% endif %}
                    {% endfor %}
                    {% if size_value != '' %}
                      <p>Model is {{ product.selected_or_first_available_variant.metafields.custom.model_info }} tall and wearing a size {{ size_value }}.</p>
                    {% endif %}
                  </div>
                {% endif %}
              </div>
           {% endif %}
        {% endfor %}
      </div>
    </div>
    <div class="pa__tab_content" data-order="2">
      {% if block.settings.tab2_content != blank %}
        <div class="pa__content first">{{ block.settings.tab2_content }}</div>
      {% endif %}
      <div class="pa__child_content icons__texts cai__pa__child_content_2"></div>
      {% comment %}
        <div class="pa__child_content icons__texts">
          {% for block in section.blocks %}
            {% if block.settings.show_icons %}
              {% for x in shop.metaobjects.fabric_features.values %}
                {% assign meta_obj_title = x.title | handleize %}
                {% assign metafield_title = product.metafields.custom.feature_performance_attribute.value | handleize %}
                {% if metafield_title contains meta_obj_title %}
                  <div class="icon__with_text-wrap">
                    <span class="icon">{{ x.icon | image_url: width: '24x' | image_tag }}</span>
                    <p>{{ x.title }}</p>
                  </div>
                {% endif %}
              {% endfor %}

                {% if block.settings.icon != blank %}
                  <div class="icon__with_text-wrap">
                    <span class="icon">{{ block.settings.icon | image_url: width: '24x' | image_tag }}</span>
                    <p>{{ block.settings.text }}</p>
                  </div>
                {% endif %}

            {% endif %}
          {% endfor %}
        </div>
      {% endcomment %}
    </div>
  </div>
  <div class="pa-icon__close">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path d="M17 7L7 17M7 7L17 17" stroke="black" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </div>
</div>

<script>
  window.iconTextFuncInDrawer = function() {
      // Fabric Feature Group 1
  const features1 = [
    {% for feature in shop.metaobjects.fabric_features.values %}
      {
        title: {{ feature.title | json }},
        icon: {{ feature.icon | image_url: width: 64 | json }}
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ];

  // Fabric Feature Group 2
  const features2 = [
    {% for feature in shop.metaobjects.fabric_features_2.values %}
      {
        title: {{ feature.title | json }},
        icon: {{ feature.icon | image_url: width: 64 | json }}
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ];

  // Metafield titles from the product
  const metafieldTitles = {{ metafield_title_list | json }};

  
    const mergedFeatures = [...features1, ...features2];  
    // Utility: convert title to a "handle" for easy matching
    function toHandle(str) {
      return str
        .toLowerCase()
        .replace(/['"]/g, "")
        .replace(/[^a-z0-9]+/g, "-")
        .replace(/^-+|-+$/g, "");
    }

    const containerVersionTwo = document.querySelector(".cai__pa__child_content_2");

    if (!Array.isArray(mergedFeatures) || !Array.isArray(metafieldTitles)) {
      console.warn("Features or metafields missing or not in correct format.");
      return;
    }

    mergedFeatures.forEach(feature => {
      const featureHandle = toHandle(feature.title);

      metafieldTitles.forEach(title => {
        const titleHandle = toHandle(title);

        if (featureHandle === titleHandle) {
          const html = `
            <div class="icon__with_text-wrap">
              <span class="icon">
                <img src="${feature.icon}" width="24" height="24" alt="${feature.title}" loading="lazy" />
              </span>
              <p>${feature.title}</p>
            </div>
          `;
          containerVersionTwo.insertAdjacentHTML("beforeend", html);
        }
      });
    console.log("Hello Hello")
  });
  }
</script>
