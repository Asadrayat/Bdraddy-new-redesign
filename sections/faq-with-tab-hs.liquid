{{ 'faq-list.css' | asset_url | stylesheet_tag }}
{% liquid
  assign id = section.id
%}

<style>
  .section-container--{{ id }}{
    margin-top: {{ section.settings.margin_top | append:'px' }};
    margin-bottom: {{ section.settings.margin_bottom | append:'px' }};
    padding-top: {{ section.settings.padding_top | append:'px' }};
    padding-bottom: {{ section.settings.padding_bottom | append:'px' }};
    background-color: {{ section.settings.bg-color }};
    overflow: hidden;
  }
  @media screen and (max-width: 768px){
    .section-container--{{ id }}{
      margin-top: {{ section.settings.margin_top_mobile | append:'px' }};
      margin-bottom: {{ section.settings.margin_bottom_mobile | append:'px'  }};
      padding-top: {{ section.settings.padding_top_mobile | append:'px' }};
      padding-bottom: {{ section.settings.padding_bottom_mobile | append:'px' }};
    }
  }
</style>
<section class="section-container--{{ id }}">
  <div class="section-wrapper--{{ id }} {% unless section.settings.full_width %}page-width{% endunless %}">
    <div class="main">
      <div class="info">
        <h2 class="heading">{{ section.settings.heading }}</h2>
      </div>
      <div class="tab-container">
        <button class="tab active" data-category="all">All</button>
        {% for block in section.blocks %}
          {% if block.type == 'category' %}
            <button class="tab" data-category="{{ block.settings.title | handleize }}">{{ block.settings.title }}</button>
          {% endif %}
        {% endfor %}
      </div>
      <div class="accordion-wrapper">
        <div class="accordion-wrapper--custom accordion-wrapper-first--hs">
          {% for block in section.blocks %}
            {% if block.type == 'item' %}
              {% if block.settings.title  != blank %}
                <div class="accordion--custom" data-category="{{ block.settings.category | handleize | default: 'all' }}">
                  <div class="acr-title">
                    <h4 class="faq-question">{{ block.settings.title }}</h4>
                    <!-- <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                      <path d="M12 15.59l-5.3-5.3a1.004 1.004 0 0 0-1.42 1.42l6 6a1.004 1.004 0 0 0 1.41 0l6-6a1.004 1.004 0 0 0-1.42-1.42L12 15.59z" />
                    </svg> -->
                    <svg class="" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 36 16" fill="none">
                      <path d="M35.9961 0.3293L35.32 1.8344L18.001 15.996L17.9961 16L17.9912 15.996L0.672195 1.8344L-0.00390623 0.3293L17.9912 8.31344L17.9953 8.31506L17.9969 8.31506L18.001 8.31344L35.9961 0.3293Z" fill="black"></path>
                    </svg>
                  </div>
                  <div class="acr-content">
                    <p>{{ block.settings.text }}</p>
                  </div>
                </div>
              {% endif %}
              {% if block.settings.title_2 != blank %}
                <div class="accordion--custom" data-category="{{ block.settings.category | handleize | default: 'all' }}">
                  <div class="acr-title">
                    <h4 class="faq-question">{{ block.settings.title_2 }}</h4>
                    <!-- <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                      <path d="M12 15.59l-5.3-5.3a1.004 1.004 0 0 0-1.42 1.42l6 6a1.004 1.004 0 0 0 1.41 0l6-6a1.004 1.004 0 0 0-1.42-1.42L12 15.59z" />
                    </svg> -->
                    <svg class="" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 36 16" fill="none">
                      <path d="M35.9961 0.3293L35.32 1.8344L18.001 15.996L17.9961 16L17.9912 15.996L0.672195 1.8344L-0.00390623 0.3293L17.9912 8.31344L17.9953 8.31506L17.9969 8.31506L18.001 8.31344L35.9961 0.3293Z" fill="black"></path>
                    </svg>
                  </div>
                  <div class="acr-content">
                    <p>{{ block.settings.text_2 }}</p>
                  </div>
                </div>
              {% endif %}
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
// Accordion Setup
class Accordioncustom {
  constructor(accordion = '', newOptions) {
    let options = {
      initOpenIndex: 1,
      closeAll: true,
      duration: 400,
      activeClass: 'active',
      globalClose: true,
      isFirstAccordion: false
    }
    this.options = { ...options, ...newOptions }
    this.accordions = document.querySelectorAll(accordion)

    this.accordions.forEach((accordion, index) => {
      this.initAccordion(accordion, index)
    })
  }

  initAccordion(accordion, accordionIndex) {
    const tabItemsArray = Array.from(accordion.children)

    if (this.options.initOpenIndex > tabItemsArray.length) {
      this.options.initOpenIndex = tabItemsArray.length
    }

    tabItemsArray.forEach((tabElement, index) => {
      let item = this.getAccordionItems(tabElement)
      this.contentInitialHeight(item[1])

      if (index === this.options.initOpenIndex - 1 && this.options.isFirstAccordion) {
        this.InitialOpen(item)
      } else {
        this.close(item)
      }

      item[0].addEventListener('click', () => {
        this.toggle(tabItemsArray, item)
      })
    })
  }

  getAccordionItems(accordion) {
    let title = accordion.children[0]
    let content = accordion.children[1]
    return [title, content]
  }

  contentInitialHeight(content) {
    content.style.height = "0px"
    content.style.overflow = 'hidden'
  }

  InitialOpen(item) {
    this.setActiveClass(item)
    this.open(item)
  }

  open(item) {
    let content = item[1]
    this.transition(content)
    content.style.height = `${content.scrollHeight}px`
  }

  close(item) {
    let content = item[1]
    content.style.height = "0px"
  }

  toggle(tabItemsArray, item) {
    const isOpen = item[1].style.height !== "0px"

    if (this.options.globalClose) {
      document.querySelectorAll('.accordion--custom').forEach(tabItem => {
        let itemToClose = this.getAccordionItems(tabItem)
        this.close(itemToClose)
        this.removeActiveClass(itemToClose)
      })
    } else {
      tabItemsArray.forEach(tabItem => {
        let itemToClose = this.getAccordionItems(tabItem)
        this.close(itemToClose)
        this.removeActiveClass(itemToClose)
      })
    }

    if (!isOpen) {
      this.setActiveClass(item)
      this.open(item)
    }
  }

  transition(el) {
    el.style.transition = `all ${this.options.duration}ms ease`
  }

  setActiveClass(item) {
    item[1].parentElement.classList.add(this.options.activeClass)
  }

  removeActiveClass(item) {
    item[1].parentElement.classList.remove(this.options.activeClass)
  }
}

// Initialize accordions
new Accordioncustom('.accordion-wrapper-first--hs', {
  initOpenIndex: 1,
  duration: 700,
  activeClass: 'active',
  globalClose: true,
  isFirstAccordion: true
});

// Tab Functionality
document.addEventListener('DOMContentLoaded', () => {
  const tabs = document.querySelectorAll('.section-wrapper--{{ id }} .tab');
  const faqs = document.querySelectorAll('.section-wrapper--{{ id }} .accordion--custom');

  function filterFAQs(category) {
    faqs.forEach(faq => {
      const faqCategory = faq.getAttribute('data-category');
      if (category === 'all' || faqCategory === category) {
        faq.style.display = '';
      } else {
        faq.style.display = 'none';
      }
    });
  }

  tabs.forEach(tab => {
    tab.addEventListener('click', () => {
      tabs.forEach(t => t.classList.remove('active'));
      tab.classList.add('active');
      const category = tab.getAttribute('data-category');
      filterFAQs(category);
    });
  });

  // Initialize with "All" tab
  filterFAQs('all');
});
</script>


{% schema %}
{
  "name": "Faq Tab",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "FAQ"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full Width Section",
      "default": true
    },
    {
      "type": "color",
      "id": "bg-color",
      "label": "Background Color"
    },
    {
      "type": "header",
      "content": "Desktop Spacing"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Margin Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Padding Top",
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 50
    },
    {
      "type": "header",
      "content": "Mobile Spacing"
    },
    {
      "type": "range",
      "id": "margin_top_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Margin Top (Mobile)",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Margin Bottom (Mobile)",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Padding Top (Mobile)",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Padding Bottom (Mobile)",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "category",
      "name": "Category",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Category Name",
          "info": "Enter the name of the FAQ category. This will appear as a tab."
        }
      ]
    },
    {
      "name": "Item",
      "type": "item",
      "settings": [
        {
          "type": "text",
          "id": "category",
          "label": "Category",
          "info": "Enter the exact name of a Category block to associate this FAQ. Leave blank to include in 'All'."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Question"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Answer"
        },
        {
          "type": "text",
          "id": "title_2",
          "label": "Question 2"
        },
        {
          "type": "richtext",
          "id": "text_2",
          "label": "Answer 2"
        },
      ]
    }
  ],
  "presets": [
    {
      "name": "Faq Tab",
      "blocks": [
        {
          "type": "category",
          "settings": {
            "title": "General"
          }
        },
        {
          "type": "category",
          "settings": {
            "title": "Shipping"
          }
        },
        {
          "type": "item",
          "settings": {
            "title": "What is your return policy?",
            "text": "<p>We offer a 30-day return policy for unused items in original packaging.</p>",
            "category": "General"
          }
        },
        {
          "type": "item",
          "settings": {
            "title": "How long does shipping take?",
            "text": "<p>Shipping takes 3-7 business days depending on your location.</p>",
            "category": "Shipping"
          }
        }
      ]
    }
  ]
}
{% endschema %}
