{% liquid
  assign id = section.id
%}

<style>
     .sec-{{ id }} {
       box-sizing: border-box;
       margin-top: {{section.settings.margin_top | append: 'px'}};
       margin-bottom: {{section.settings.margin_bottom | append: 'px'}};
       padding-top: {{section.settings.padding_top | append: 'px'}};
       padding-bottom: {{section.settings.padding_bottom | append: 'px'}};
     }

     @media(max-width: 600px) {
       .sec-{{ id }} {
         margin-top: {{section.settings.margin_top_m | append: 'px'}};
         margin-bottom: {{section.settings.margin_bottom_m | append: 'px'}};
         padding-top: {{section.settings.padding_top_m | append: 'px'}};
         padding-bottom: {{section.settings.padding_bottom_m | append: 'px'}};
       }
     }


    .sec-{{ id }} {


  .--filter-wrapper {
      display: flex;
      gap: var(--spacing-4xl, 32px);
     @media(max-width: 600px) {
       overflow-x: scroll;
       -ms-overflow-style: none;  /* IE and Edge */
        scrollbar-width: none;  /* Firefox */
     }

  }


.--filter-wrapper::-webkit-scrollbar {
  display: none;
}


  .-filter-item {
      color: var(--colors-text-text-quaternary-500, #717680);
      font-family: var(--font-family-Control, "Archivo Expanded");
      font-size: 16px;
      font-style: normal;
      font-weight: 400;
      line-height: 20px;
      padding: 0px var(--Spacing-Container-xxs, 8px) var(--Spacing-Container-xs, 12px) var(--Spacing-Container-xxs, 8px);
      /* border-bottom: 2px solid var(--Brand-Primary, #212B36); */
      min-width: max-content;
      cursor: pointer;
      position: relative;
  }
/* .-filter-item.--active {
  color: var(--Brand-Primary, #212B36);
  border-bottom: 2px solid var(--Brand-Primary, #212B36);
} */
.-filter-item:after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: #212B36;
    transition: all .3s;
}
.-filter-item.--active:after{
  width: 100%;
}
.--article-container.--active {
    display: grid;
}
      .--article-container {
       /* display: grid; */
       display: none;
       grid-template-columns: repeat(3,1fr);
       gap: var(--Spacing-Container-lg, 40px);
        margin-block: var(--Spacing-Container-md, 24px);
        @media(max-width: 600px) {
          grid-template-columns:1fr;
        }
     }
    }
</style>

<div class="sec-{{ id }}">
 
  <div class="{% unless section.settings.full_width %}page-width{% endunless %}">
    <div class="wrapper-{{ id }}">
      <div class="--filter-wrapper">
        <div class="-filter-item --active" data-title="all">View all</div>
        {% for tag in blog.tags %}
          <div class="-filter-item" data-title="{{ tag }}">{{ tag }}</div>
        {% endfor %}
      </div>

      <div class="--filtered-article-container">
        <div class="--article-container --active" data-title="all">
          {% for article in blog.articles %}
            {% render 'mclbx-article-card', article: article, badge: article.tags[0] %}
          {% endfor %}
        </div>

        {% for tag in blog.tags %}
          <div class="--article-container" data-title="{{ tag }}">
            {% for article in blog.articles %}
              {% if article.tags contains tag %}
                {% render 'mclbx-article-card', article: article, badge: tag %}
              {% endif %}
            {% endfor %}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
  let tabContents = document.querySelectorAll('.sec-{{ id }} .--article-container');
  let tabTitles = document.querySelectorAll('.sec-{{ id }} .-filter-item');
  let slidersContainer = document.querySelector('.sliders-container'); // Define slidersContainer if needed

  tabTitles.forEach((title) => {
    title.addEventListener('click', () => {
      // Remove active class from all titles
      tabTitles.forEach((x) => x.classList.remove('--active'));

      // Remove active class from all tab contents and apply the active class to the matching content
      tabContents.forEach((x) => {
        x.classList.remove('--active');
        if (x.dataset.title && title.dataset.title && x.dataset.title.trim() === title.dataset.title.trim()) {
          x.classList.add('--active');
          
          // Adjust the height of the slidersContainer
          if (slidersContainer) {
            slidersContainer.style.minHeight = window.getComputedStyle(x).height;
          }
        }
      });

      // Add active class to the clicked title
      title.classList.add('--active');
    });
  });
});



  
</script>


{% schema %}
{
  "name": "Blog",
  "settings": [
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full Width Section",
      "default": false
    },
    {
      "type": "header",
      "content": "Section Spacing Desktop"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Margin Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Top",
      "default": 80
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 80
    },
    {
      "type": "header",
      "content": "Section Spacing Mobile"
    },
    {
      "type": "range",
      "id": "margin_top_m",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Margin Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom_m",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_top_m",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Top",
      "default": 32
    },
    {
      "type": "range",
      "id": "padding_bottom_m",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 32
    }
  ],

  "presets": [
    {
      "name": "Blog"
    }
  ]
}
{% endschema %}
