<style>
  pqa-new{
    position: fixed;
    /* top: -200px; */
    left: 0;
    width: 100%;
    /* background: #fff; */
    /* z-index: 99; */
    z-index: 4;
    opacity: 0;
    /* transition: .4s; */
    background: #ffffffed;
  }
  pqa-new.sticky-visible{
    top: 76px;
    opacity: 1;
    /* border-top: 1px solid #00000000; */
    /* border-bottom: 1px solid #4b5563; */
    bottom: unset;
    @media screen and (max-width: 800px){
     bottom: 0;
     top: unset;
    }
  }
  pqa-new .page-width{
    @media screen and (max-width: 800px){
      padding: 0;
      max-width: 100%;
    }
  }
  .pqa-new-wrapper{
    display: grid;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    gap: 24px;
    @media screen and (max-width: 800px){
      grid-template-columns: minmax(0,1fr);
    }
  }

  .pqa-new-title{
    display: flex;
    box-sizing: border-box;
    gap: 12px;
    align-items: center;

   @media screen and (max-width: 800px){
     display: none;
   }
  }
  .pqa-new-title img{
    display: block;
    max-width: 100%;
    height: auto;
    width: 60px;
    aspect-ratio: 4/5;
    object-fit: cover;
  }
  .pqa-new-title .qa-title{
    color: #000;

    /* Paragraph/M */
    font-family: var(--font-family-Title, "Sainte Colombe");
    font-size: var(--Font-Size-Paragraph-Regular, 16px);
    font-style: normal;
    font-weight: 400;
    line-height: var(--Line-Height-Paragraph-Regular, 24px); /* 150% */
    margin: 0 0 8px 0;
  }
  .pqa-new-title .qa-price{
    margin: 0;
    color: var(--Content-Base-main, #1F2937);

    /* Paragraph/XS */
    font-family: var(--font-family-Control);
      font-size: var(--Font-Size-Paragraph-Small, 12px);
    font-style: normal;
    font-weight: 400;
    line-height: var(--Line-Height-Paragraph-Tiny, 16px); /* 133.333% */
  }
  .pqa-new-variants{
    display: grid;
    grid-template-columns: auto auto;
    align-items: center;
    gap: 24px;
    justify-self: center;
  }
  .pqa-new-option select{
    width: 100%;
    color: #000;
    font-family: var(--font-family-Control, "Archivo Expanded");
    font-size: var(--Font-Size-Paragraph-Tiny, 12px);
    font-style: normal;
    font-weight: 400;
    line-height: var(--Line-Height-Paragraph-Tiny, 16px); /* 133.333% */
    cursor: pointer;
    -webkit-appearance: none; /* Fix for Safari */
    -moz-appearance: none; /* Fix for Firefox */
    appearance: none; /* Fix for other browsers */

    background: url('data:image/svg+xml;utf8,<svg fill="%23000000" width="20px" height="20px" viewBox="-5 -8 24 24" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin"><path d="M7.071 5.314l4.95-4.95a1 1 0 1 1 1.414 1.414L7.778 7.435a1 1 0 0 1-1.414 0L.707 1.778A1 1 0 1 1 2.121.364l4.95 4.95z"/></svg>');
    background-repeat: no-repeat;
    background-position: top 50% right 8px;
    background-size: 16px;

    min-width: 134px;
    max-width: max-content;

    box-sizing: border-box;
    padding: 8px 8px;
    border: 1px solid #E5E7EB;
    /* border-radius: 32px; */
    padding-right: 25px;
  }

  .pqa-new-option select:focus{
    border: none;
    outline: none;
    box-shadow: none;
    border: 1px solid #E5E7EB;
  }
  .pqa-new-form button{
    display: block;
    width: 100%;
    color: #ffffff;
    text-align: center;

    /* UI Controls/Control/Button/Regular */
    font-family: var(--font-family-Control, "Archivo Expanded");
    /* font-size: var(--Font-Size-UI-Controls-Control-Button-Small, 20px); */
    font-style: normal;
    font-weight: 400;
    /* line-height: var(--Line-Height-UI-Controls-Control-Button-Small, 20px); /* 100% */ */
    text-transform: uppercase;
    border-radius: var(--rounded-none, 0px);
    background: var(--Brand-Primary, #212B36);

    box-sizing: border-box;
    border: none;
    padding: 12px 40px;
  }


  @media screen and (max-width: 800px){
    .pqa-new-wrapper{
      grid-gap: 0;
    }
    .pqa-new-form button{
      padding: 14px 12px;
    }
    .pqa-new-title, .pqa-new-variants{
      padding: 8px;
    }
    .pqa-new-option select{
      font-size: 11px;
      min-width: 100%;
      max-width: 100%;
      padding-right: 10px;
    }
    .pqa-new-variants{
       display: none;
      /* display: grid;
      grid-template-columns: minmax(0,2fr) minmax(0,1fr);
      gap: 12px;
      width: 100%; */
    }
  }
</style>

<div class="pqa-container" id="pqa-container">
  <pqa-new>
    <div class="page-width">
      <div class="pqa-new-wrapper">
        <div class="pqa-new-title">
          {% unless product.selected_or_first_available_variant.featured_image == blank %}
            {{ product.selected_or_first_available_variant.featured_image | image_url: width: 100 | image_tag }}
          {% endunless %}
          <div>
            <p class="qa-title">{{ product.title }}</p>
            <p class="qa-price">{{ product.selected_or_first_available_variant.price | money }}</p>
          </div>
        </div>
        <div class="pqa-new-variants">
          {% for option in product.options_with_values %}
            <div class="pqa-new-option">
              <select>
                {% for value in option.values %}
                  <option
                    {% if value.selected %}
                      selected
                    {% endif %}
                    value="{{ value.variant.url }}"
                  >
                    {% if value.available %}
                      {{ value.name }}
                    {% else %}
                      <s>{{ value.name }}</s>
                    {% endif %}
                  </option>
                {% endfor %}
              </select>
            </div>
          {% endfor %}
        </div>
        <div class="pqa-new-form">
          {% form 'product', product %}
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            <input type="hidden" name="quantity" value="1">
            <button
              type="submit"
              {% unless product.selected_or_first_available_variant.available %}
                disabled
              {% endunless %}
              class="button"
            >
              {% if product.selected_or_first_available_variant.available %}
                Add To Cart
              {% else %}
                Sold Out
              {% endif %}
            </button>
          {% endform %}
        </div>
      </div>
    </div>
  </pqa-new>
</div>

<script>
  let lastScrollY = window.scrollY; // Keep track of the previous scroll position
  let infoHeight = document.querySelector(".pinfo-wrapper").scrollHeight + document.querySelector(".sticky--selector").scrollHeight
  let footer = document.querySelector(".footer__section");
  const pqaNewElement = document.querySelector('pqa-new');

  window.addEventListener("scroll", function () {
     if (window.scrollY >= infoHeight) {
        pqaNewElement.classList.add('sticky-visible');
       if (footer && footer.parentElement) {
         footer.parentElement.style.paddingBottom = '100px';
       }
        
      } else {
        pqaNewElement.classList.remove('sticky-visible');
       if (footer && footer.parentElement) {
         footer.parentElement.style.paddingBottom = '0px';
       }
       
      }
  });
</script>

<script>
  // let lastScrollY = window.scrollY; // Keep track of the previous scroll position
  // let infoHeight = document.querySelector(".pinfo-wrapper").scrollHeight - 500

  // window.addEventListener("scroll", function () {
  //   const currentScrollY = window.scrollY;
  //   if (lastScrollY >= infoHeight) {
  //     console.log("Ok"); // If scrolled up 350px or more
  //   } else {
  //     console.log("Not Ok"); // Otherwise
  //   }

  //   lastScrollY = currentScrollY; // Update the last scroll position
  // });
</script>

<script>
    // document.addEventListener("DOMContentLoaded", function() {

    // const pinfoFormWrapper = document.querySelector('.sticky--selector');
    // const pqaNewElement = document.querySelector('pqa-new');
    // const footer = document.querySelector(".footer__section");

    // // Set up the Intersection Observer
    // let observer = new IntersectionObserver(entries => {
    //   let isEntersect = false;

    //   entries.forEach(entry => {
    //     console.log("el-------", entry.target)
    //     if (entry.isIntersecting) {
    //       isEntersect = true;
    //       pqaNewElement.classList.remove('sticky-visible');
    //       footer.parentElement.style.paddingBottom = '0px';
    //     } else {
    //       isEntersect = false;
    //       pqaNewElement.classList.add('sticky-visible');
    //       footer.parentElement.style.paddingBottom = '100px';
    //     }
    //   });
    // }, {
    //   threshold: 0.1 // Trigger when at least 10% of the element is in the viewport
    // });

    // // Start observing the element

    //     observer.observe(pinfoFormWrapper);

  // });
</script>
{% schema %}
{
  "name": "Product Quick Add",
  "enabled_on": {
    "templates": ["product"]
  },
  "presets": [
    {
      "name": "Product Quick Add"
    }
  ],
  "settings": []
}
{% endschema %}
